(define (main)
    (setPort (open (getElement ScamArgs 1) 'read))
    (define arg1 (readExpr))
    (define arg2 (readExpr))
    (println "(halve " arg1 ") is " (halve arg1))
    (println "(double " arg1 ") is " (double arg1))
    (println "(div2? " arg1 ") is " (div2? arg1))
    (println "(ethiop " arg1 " " arg2 ") is " (ethiop arg1 arg2))
    )

(define (halve x)
    (define (iter store src) 
        (cond 
            ((= src 0) store)
            ((= src 1) store)
            (else (iter (+ store 1) (- src 2)))
            )
        )
    (iter 0 x)
    )

(define (double y)
    (+ y y)
    )

(define (div2? z)
    (define (iter store src) 
        (cond 
            ((= src 0) #t)
            ((= src 1) #f)
            (else (iter store (- src store)))
            )
        )
    (iter 2 z)
    )

(define (ethiop x y)
    (define (iter store src1 src2)
        (cond
            ((= src2 0) store)
            ((equal? #f (div2? src2)) (iter (+ store src1) (double src1) (halve src2)))
            (else (iter store (double src1) (halve src2)))
            )
        )
    (iter 0 x y)
    )