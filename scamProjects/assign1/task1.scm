(define (main)
    (setPort (open (getElement ScamArgs 1) 'read))
    (define arg (readExpr))
    (println "(cyan " arg ") is " (cyan arg))
    (println "(yellow " arg ") is " (yellow arg))
    (println "(magenta " arg ") is " (magenta arg))
    (println "(cym " arg ") is " (cym arg))
    )

(define pi 3.14159265358979323846)

;scaled between 0 and 255 according to a quarter cycle of a left-shifted sine wave
(define (cyan x)
    (int (+ 0.00000001 (* 255 (sin (+ (* (/ pi 200) x) (/ pi 2))))))
    )

;scaled between 0 and 255 according to a half-cycle of an inverted up-shifted sine wave
(define (yellow x)
    (int (+ 0.00000001 (+ (* 255 (sin (- (* (/ pi 100) x) pi))) 255)))
    )

;scaled between 0 and 255 according to a three-quarters of a cycle of an left- and up-shifted sine wav
(define (magenta x)
    (int (+ 0.00000001 (+ (* 127.5 (cos (* (/ (* 3 pi) 200) x))) 127.5)))
    )

(define (cym x)
    (define (toHex y)
        (define one (/ y 16))
        (define two (% y 16))
        (define (alpha z)
            (cond 
                ((= 0 z) "0")
                ((= 1 z) "1")
                ((= 2 z) "2")
                ((= 3 z) "3")
                ((= 4 z) "4")
                ((= 5 z) "5")
                ((= 6 z) "6")
                ((= 7 z) "7")
                ((= 8 z) "8")
                ((= 9 z) "9")
                ((= 10 z) "A")
                ((= 11 z) "B")
                ((= 12 z) "C")
                ((= 13 z) "D")
                ((= 14 z) "E")
                (else "F")
                )
            )
        (string+ (alpha one) (alpha two))
        )
    (define a (toHex (cyan x)))
    (define b (toHex (yellow x)))
    (define c (toHex (magenta x)))
    (define hex "#")
    (string+ hex (string+ a (string+ b c)))
    )