program : def
        | def program

def : class
    | varDef
    | function
    
operator : PLUS
         | MINUS
         | SUM
         | EQUALS
         | TIMES
	       | DIVIDE
         | EXPONENTIAL
         | MODULO

unary : VAR
      | INTEGER
      | REAL
      | STRING
      | CHAR
      | UMINUS unary
      | BOOL
      | function
      | class

comparison : AND
           | OR
           | NOT
           | EQUALTO
           | GREATER_THAN
           | LESS_THAN

modifier : DECREMENT DECREMENT VAR
         | VAR DECREMENT DECREMENT
         | INCREMENT INCREMENT VAR
         | VAR INCREMENT INCREMENT

varDef : LET VAR EQUALS unary
       | LET VAR

class : classDef
      | classCall

classDef : CLASS VAR OBRACE optParamList CBRACE block
         | CLASS VAR

classCall : NEW CLASS VAR OBRACE optArgList CBRACE

function : functionDef
	       | functionCall

functionDef : LET VAR OBRACE optParamList CBRACE block

functionCall : LET VAR OBRACE optArgList CBRACE

block : BEGIN statements END

statements : statement
           | statement statements

statement : expr
          | if
          | loop
          | function
          | class

expr : operator unary
     | unary operator unary
     | unary comparison unary
     | modifier

parameters : unary
          | unary COMMA parameters

optParamList : parameters
             | EMPTY

arguments : unary
          | unary COMMA arguments

optArgList : arguments
           | EMPTY

if : IF OBRACE expr CBRACE block optElse

optElse : ELSE block
        : ELSE if
        | EMPTY

loop : forLoop
     | whileLoop

forLoop : FOR OBRACE expr TILDE expr TILDE expr CBRACE block

whileLoop : WHILE OBRACE expr CBRACE block
